name: Build and push to Dockerhub

on:
  push:
    branches:
      - master

jobs:
  build-mongo:
    strategy:
      matrix:
        version: [4.2, 4.4, 5, 6]
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Create mongo ${{ matrix.version }} container image
        run: docker buildx build --build-ars tag=${{ matrix.version }} -f dbs/mongo/Dockerfile -t metabase/qa-databases:mongo-sample-${{ matrix.version }} --push --compress --no-cache --platform linux/arm64/v8,linux/amd64 .

  # this will be enabled once we upload mssql images
  # build-mssql:
  #   runs-on: ubuntu-22.04
  #   timeout-minutes: 30
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v2
  #     - name: Set up Docker Buildx
  #       id: buildx
  #       uses: docker/setup-buildx-action@v2
  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
  #     - name: Create mssql 2017 image
  #       run: docker buildx build -f dbs/mssql/2017/Dockerfile -t metabase/qa-databases:mssql-sample-2017 --push --compress --no-cache .

  build-mysql:
    strategy:
      matrix:
        version: [5.7, 8]
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Create mysql ${{ matrix.version }} image
        run: docker buildx build --build-arg tag=${{ matrix.version }} -f dbs/mysql/Dockerfile -t metabase/qa-databases:mysql-sample-${{ matrix.version }} --push --compress --no-cache .

  build-postgres:
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    strategy:
      matrix:
        version: [9, 10, 11, 12, 13, 14, 15]
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Create postgres ${{ matrix.version }} image
        run: docker buildx build --build-arg tag=${{ matrix.version }} -f dbs/postgres/Dockerfile -t metabase/qa-databases:postgres-sample-${{ matrix.version }} --push --compress --no-cache --platform linux/arm64/v8,linux/amd64 .
  
  build-oracle:
    runs-on: ubuntu-22.04
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Create oracle 21 image
        run: docker buildx build -f dbs/oracle/Dockerfile -t metabase/qa-databases:oracle-xe-21.3 --push --compress --no-cache --platform .
