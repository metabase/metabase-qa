name: JAR Sanity Check

on:
  push:
  schedule:
    - cron: "0 6 * * *"

jobs:

  download:
    runs-on: ubuntu-20.04
    timeout-minutes: 5
    steps:
    - name: Get metabase.jar (OSS) from Metabase website
      run: |
        curl -o download.html https://www.metabase.com/start/oss/jar.html
        JAR_DOWNLOAD_URL=`grep 'meta http-equiv="refresh"' download.html | grep -oEi 'https://([a-z0-9A-Z\./]*\.jar)'`
        echo $JAR_DOWNLOAD_URL > url.txt
        echo "----- Downloading JAR from $JAR_DOWNLOAD_URL -----"
        curl -OL $JAR_DOWNLOAD_URL
        stat ./metabase.jar
        date | tee timestamp
    - name: Calculate SHA256 checksum
      run: sha256sum ./metabase.jar | tee SHA256.sum
    - name: Upload JAR as artifact
      uses: actions/upload-artifact@v2
      with:
        name: metabase-jar
        path: |
          ./metabase.jar
          ./url.txt
          ./timestamp
          ./SHA256.sum

  check:
    runs-on: ubuntu-20.04
    name: check (java ${{ matrix.java-version }})
    needs: download
    timeout-minutes: 10
    strategy:
      matrix:
        java-version: [8, 11]
    steps:
    - name: Prepare JRE (Java Run-time Environment)
      uses: actions/setup-java@v1
      with:
        java-package: jre
        java-version: ${{ matrix.java-version }}
    - run: java -version
    - uses: actions/download-artifact@v2
      name: Retrieve previously downloaded JAR
      with:
        name: metabase-jar
    - name: Reveal its version.properties
      run: jar xf metabase.jar version.properties && cat version.properties
    - name: Display when and where it was downloaded
      run: |
        cat timestamp
        cat url.txt
    - name: Show the checksum
      run: cat SHA256.sum
    - name: Launch the JAR (and keep it running)
      run: java -jar ./metabase.jar &
    - name: Wait for Metabase to start
      run: while ! curl -s localhost:3000/api/health; do sleep 1; done
      timeout-minutes: 3
    - name: Check API health
      run: curl -s localhost:3000/api/health
